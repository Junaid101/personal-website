---
// src/pages/recipes/[slug].astro
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import RecipeScaler from "../../components/RecipeScaler.jsx";
import '../../styles/blogpost.css';


// Generate static pages for all recipes
export async function getStaticPaths() {
  const recipes = await getCollection("recipes");
  return recipes.map((recipe) => ({
    params: { slug: recipe.slug },
    props: { recipe },
  }));
}

const { recipe } = Astro.props;
const { Content } = await recipe.render();

// Extract the instructions from the rendered content later
---

<Layout title={recipe.data.title} description={recipe.data.description}>
  <div class="min-h-screen">
    <article class="font-mono max-w-2xl mx-auto py-10 sm:px-6 bg-white shadow-lg">
      <div class="mb-8">
        {
          recipe.data.image && (
            <img
              src={recipe.data.image}
              alt={recipe.data.title}
              class="w-full h-64 object-cover rounded-lg mb-6"
            />
          )
        }

        <div class="flex flex-wrap items-center gap-3 text-sm mb-4">
          <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full">
            {recipe.data.category}
          </span>
          {
            recipe.data.tags.map((tag) => (
              <span class="px-3 py-1 bg-gray-100 text-gray-800 rounded-full">
                {tag}
              </span>
            ))
          }
        </div>

        <h1 class="text-4xl font-bold mb-2">{recipe.data.title}</h1>
        <p class="text-gray-700 mb-4">{recipe.data.description}</p>

        <div class="bg-yellow-50 border-l-4 border-yellow-400 p-4 mb-6">
          <h3 class="font-semibold text-yellow-800 mb-1">Personal Notes</h3>
          <p class="text-yellow-800 italic">{recipe.data.personalNotes}</p>
        </div>
      </div>

      <RecipeScaler
        client:visible
        title={recipe.data.title}
        prepTime={recipe.data.prepTime}
        cookTime={recipe.data.cookTime}
        servings={recipe.data.servings}
        ingredients={recipe.data.ingredients}
      />

      <div class="mt-8 prose max-w-none markdown-content">
        <Content />
      </div>
    </article>
  </div></Layout>


